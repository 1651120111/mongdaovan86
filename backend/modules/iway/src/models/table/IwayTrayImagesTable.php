<?php

namespace modava\iway\models\table;

use cheatsheet\Time;
use modava\iway\models\query\IwayTrayImagesQuery;
use Yii;
use yii\db\ActiveRecord;

class IwayTrayImagesTable extends \yii\db\ActiveRecord
{
    const CHUA_DANH_GIA = 0;
    const DAT = 1;
    const CHUA_DAT = 2;

    public $pathUpload;

    public function init()
    {
        $params = \Yii::$app->params;
        $path = array_key_exists('iway-tray-image', $params) &&
        is_array($params['iway-tray-image']) &&
        array_key_exists('path', $params['iway-tray-image']) ? $params['iway-tray-image']['path']['folder'] : '/uploads';
        if (substr($path, -1) != '/') $path .= '/';
        $this->pathUpload = \Yii::getAlias('@backend/web') . $path;
        parent::init(); // TODO: Change the autogenerated stub
    }

    public static function tableName()
    {
        return 'iway_tray_images';
    }

    public static function find()
    {
        return new IwayTrayImagesQuery(get_called_class());
    }

    public function afterDelete()
    {
        $cache = Yii::$app->cache;
        $keys = [];
        foreach ($keys as $key) {
            $cache->delete($key);
        }
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        $cache = Yii::$app->cache;
        $keys = [];
        foreach ($keys as $key) {
            $cache->delete($key);
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    public function getImage()
    {
        if ($this->image != null && !is_dir($this->pathUpload . $this->image) && file_exists($this->pathUpload . $this->image)) {
            return Yii::$app->assetManager->publish($this->pathUpload . $this->image)[1];
        }
        return null;
    }
}
