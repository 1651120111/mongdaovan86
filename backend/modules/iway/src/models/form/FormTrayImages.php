<?php

namespace modava\iway\models\form;

use modava\iway\models\IwayTray;
use modava\iway\models\IwayTrayImages;
use yii\base\Model;
use yii\behaviors\AttributeBehavior;
use yii\db\Exception;
use yii\web\UploadedFile;

class FormTrayImages extends Model
{
    const SCENARIO_SAVE = 'save';
    const THANG_CAN_CHAT_KHONG_DEO_TRAY = 0;
    const TRAI_CAN_CHAT_KHONG_DEO_TRAY = 1;
    const PHAI_CAN_CHAT_KHONG_DEO_TRAY = 2;
    const THANG_HO_KHONG_DEO_TRAY = 3;
    const TRAI_HO_KHONG_DEO_TRAY = 4;
    const PHAI_HO_KHONG_DEO_TRAY = 5;
    const THANG_HO_DEO_TRAY = 6;
    const TRAI_HO_DEO_TRAY = 7;
    const PHAI_HO_DEO_TRAY = 8;
    const TYPE = [
        self::THANG_CAN_CHAT_KHONG_DEO_TRAY => 'Không đeo tray - Thẳng cắn chặt',
        self::TRAI_CAN_CHAT_KHONG_DEO_TRAY => 'Không đeo tray - Trái cắn chặt',
        self::PHAI_CAN_CHAT_KHONG_DEO_TRAY => 'Không đeo tray - Phải cắn chặt',
        self::THANG_HO_KHONG_DEO_TRAY => 'Không đeo tray - Thẳng hở',
        self::TRAI_HO_KHONG_DEO_TRAY => 'Không đeo tray - Trái hở',
        self::PHAI_HO_KHONG_DEO_TRAY => 'Không đeo tray - Phải hở',
        self::THANG_HO_DEO_TRAY => 'Đeo tray - Thẳng hở',
        self::TRAI_HO_DEO_TRAY => 'Đeo tray - Trái hở',
        self::PHAI_HO_DEO_TRAY => 'Đeo tray - Phải hở',
    ];

    public $image;
    public $tray;
    public $type;
    private $pathUpload;
    private $uploadSuccess;

    public function init()
    {
        $params = \Yii::$app->params;
        $path = array_key_exists('iway-tray-image', $params) &&
        is_array($params['iway-tray-image']) &&
        array_key_exists('path', $params['iway-tray-image']) ? $params['iway-tray-image']['path']['folder'] : '/uploads';
        if (substr($path, -1) != '/') $path .= '/';
        $this->pathUpload = \Yii::getAlias('@backend/web') . $path;
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function behaviors()
    {
        return [
            [
                'class' => AttributeBehavior::class,
                'attributes' => [
                    Model::EVENT_BEFORE_VALIDATE => 'image'
                ],
                'value' => function () {
                    return $this->image = UploadedFile::getInstance($this, 'image');
                }
            ],
        ];
    }

    public function rules()
    {
        return [
            [['image'], 'required', 'on' => [self::SCENARIO_SAVE]],
            [['type', 'tray'], 'required'],
            [['image'], 'file', 'extensions' => ['png', 'jpg', 'jpeg'], 'wrongExtension' => 'Chỉ chấp nhận định dạng: {extensions}'],
            [['type'], 'in', 'range' => array_keys(self::TYPE)],
            [['tray'], 'integer'],
            [['tray'], 'exist', 'targetClass' => IwayTray::class, 'targetAttribute' => 'id'],
            [['tray'], 'validateTray']
        ];
    }

    public function attributeLabels()
    {
        return [
            'image' => \Yii::t('backend', 'Hình ảnh'),
            'type' => \Yii::t('backend', 'Loại'),
            'tray' => \Yii::t('backend', 'Tray'),
        ];
    }

    public function saveTrayImage()
    {
        if (!$this->hasErrors() && $this->image != null) {
            /* @var $image UploadedFile */
            $image = $this->image;
            if ($image !== null) {
                $imageName = $image->baseName . '-' . time() . '.' . $image->extension;
                $pathImage = $this->pathUpload . $imageName;
                if (!$image->saveAs($pathImage)) {
                    $this->addError('image', 'Upload hình thất bại');
                    return false;
                }
                $this->uploadSuccess[] = $imageName;
                try {
                    $modelTrayImage = new IwayTrayImages();
                    $modelTrayImage->setAttributes([
                        'tray_id' => $this->tray,
                        'type' => $this->type,
                        'image' => $imageName
                    ]);
                    if (!$modelTrayImage->save()) {
                        $this->addError('image', 'Lưu hình thất bại');
                        return false;
                    }
                    return true;
                } catch (Exception $ex) {
                    $this->addError('image', 'Lỗi lưu dữ liệu');
                    return false;
                }
            } else {
                $this->addError('image', 'Không có dữ liệu hình ảnh');
                return false;
            }
        }
    }

    public function deleteTrayImage()
    {
        if ($this->uploadSuccess != null) {
            if (!is_array($this->uploadSuccess)) $this->uploadSuccess = [];
            foreach ($this->uploadSuccess as $uploadSuccess) {
                if (!is_dir($this->pathUpload . $uploadSuccess) && file_exists($this->pathUpload . $uploadSuccess)) {
                    @unlink($this->pathUpload . $uploadSuccess);
                }
            }
        }
    }

    public function validateTray()
    {
        if (!$this->hasErrors()) {
            $count = IwayTrayImages::find()->where([
                IwayTrayImages::tableName() . '.type' => $this->type,
                IwayTrayImages::tableName() . '.tray_id' => $this->tray,
                IwayTrayImages::tableName() . '.status' => IwayTrayImages::STATUS_DISABLED
            ])->count();
            if($count > 0){
                $this->addError('tray', 'Hình cũ chưa được đánh giá, không thể upload hình mới');
            }
        }
    }
}