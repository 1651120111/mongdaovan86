<?php

namespace modava\customer\models\table;

use cheatsheet\Time;
use modava\customer\models\query\CustomerStatusCallQuery;
use Yii;
use yii\db\ActiveRecord;

class CustomerStatusCallTable extends \yii\db\ActiveRecord
{
    const STATUS_DISABLED = 0;
    const STATUS_PUBLISHED = 1;

    public static function tableName()
    {
        return 'customer_status_call';
    }

    public static function find()
    {
        return new CustomerStatusCallQuery(get_called_class());
    }

    public function afterDelete()
    {
        $cache = Yii::$app->cache;
        $keys = [
            'redis-customer-status-call-get-by-id-' . $this->id,
            'redis-customer-status-call-get-status-call-dat-hen',
            'redis-customer-status-call-get-all-status-call'
        ];
        foreach ($keys as $key) {
            $cache->delete($key);
        }
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        $cache = Yii::$app->cache;
        $keys = [
            'redis-customer-status-call-get-by-id-' . $this->id,
            'redis-customer-status-call-get-status-call-dat-hen',
            'redis-customer-status-call-get-all-status-call'
        ];
        foreach ($keys as $key) {
            $cache->delete($key);
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    public static function getById($id)
    {
        $cache = Yii::$app->cache;
        $key = 'redis-customer-status-call-get-by-id-' . $id;
        $data = $cache->get($key);
        if ($data == false) {
            $data = self::find()->where(['id' => $id])->published()->one();
            $cache->set($key, $data);
        }
        return $data;
    }

    public static function getStatusCallDatHen()
    {
        $cache = Yii::$app->cache;
        $key = 'redis-customer-status-call-get-status-call-dat-hen';
        $data = $cache->get($key);
        if ($data == false) {
            $data = self::find()->where(['accept' => self::STATUS_PUBLISHED])->published()->all();
            $cache->set($key, $data);
        }
        return $data;
    }

    public static function getAllStatysCall()
    {
        $cache = Yii::$app->cache;
        $key = 'redis-customer-status-call-get-all-status-call';
        $data = $cache->get($key);
        if ($data == false) {
            $data = self::find()->published()->all();
            $cache->set($key, $data);
        }
        return $data;
    }
}
